package day0327;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Ex08_MemberList {
	List<MemberDto> list = new ArrayList<MemberDto>();
	Scanner sc = new Scanner(System.in);
	static final String FILENAME = "/Users/macbook/Desktop/naver0314/member.txt";

	public Ex08_MemberList() {
		memberReadFile();
	}
	public void memberReadFile() {
		FileReader fr = null;
		BufferedReader br =null;

		try {
			fr = new FileReader(FILENAME);
			br = new BufferedReader(fr);

			while(true) {
				String s = br.readLine();
				if(s==null) {
					break;
				}
				String []a = s.split(",");
				MemberDto dto = new MemberDto();
				dto.setName(a[0]);
				dto.setHp(a[1]);
				dto.setAddr(a[2]);
				dto.setBlood(a[3]);

				list.add(dto);
			}
			System.out.println("총 "+list.size()+"명의 멤버 정보를 읽어왔습니다.");
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			//e.printStackTrace();
			System.out.println("읽어올 멤버 정보가 없습니다.");
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}finally {
			try {
				br.close();
				fr.close();
			} catch (IOException | NullPointerException e) {
				// TODO Auto-generated catch block
				//	e.printStackTrace();

			}
		}
	}
	public void memberFileSave() {
		FileWriter fw = null;
		try {
			fw = new  FileWriter(FILENAME);
			for(MemberDto dto : list) {
				String s = dto.getName()+","+dto.getHp()+","+dto.getAddr()+","+dto.getBlood()+"\n";
				fw.write(s);
			}
			System.out.println("총 "+list.size()+"명의 정보를 파일에 저장하였습니다.");
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}finally {
			try {
				fw.close();
			} catch (IOException | NullPointerException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}
	public int getMenu() {
		int menu = 0;
		System.out.println("=".repeat(70));
		System.out.println("1.멤버 정보 추가");
		System.out.println("2.멤버 정보 삭제");
		System.out.println("3.멤버 정보 출력");
		System.out.println("4.멤버 이름으로 검색");
		System.out.println("5.멤버 핸드폰으로 검색");
		System.out.println("6.멤버 정보 저장 후 종료");
		System.out.println("=".repeat(70));
		try {	
			menu = Integer.parseInt(sc.nextLine());
		}catch(NumberFormatException e) {
			System.out.println("번호를 숫자로 입력해주세요");
		}

		return menu;
	}
	public void addMember() {
		System.out.println("이름을 입력하세요");
		String name = sc.nextLine();
		System.out.println("핸드폰을 입력하세요");
		String hp = sc.nextLine();
		System.out.println("주소를 입력하세요");
		String addr = sc.nextLine();
		System.out.println("혈액형을 입력하세요");
		String blood = sc.nextLine();

		MemberDto dto = new MemberDto(name, hp, addr, blood);

		list.add(dto);
		System.out.println(list.size()+"번째 멤버 정보를 추가하였습니다.");

	}
	public void deleteMember() {
		/*
		 * 삭제할 이름을 입력후 해당 이름에 해당하는 멤버정보를 삭제한다.
		 */

		System.out.println("삭제할 멤버 이름을 입력하세요.");
		String name = sc.nextLine();
		//MemberDto dto = new MemberDto(, hp, addr, blood);
		boolean f = false;
		for(int i = 0; i < list.size(); i++) {
			MemberDto dto = list.get(i);
			if(dto.getName().equals(name)) {
				f=true;
				list.remove(i);
				break;
			}
		}
		if(f) {
			System.out.println(name+"님의 정보를 삭제하였습니다. ");
		}
		else System.out.println(name+"님은 명단에 없습니다.");
	}
	public void writeMember() {
		System.out.println("\t\t 전체 멤버 명단\n");
		System.out.println("=".repeat(50));
		System.out.println("번호\t이름\t핸드폰\t\t주소\t혈액형");
		System.out.println("=".repeat(50));
		for(int i = 0; i < list.size(); i++) {
			MemberDto dto = list.get(i);
			System.out.println(i+1+"\t"+dto.getName()+"\t"+dto.getHp()+"\t"+dto.getAddr()+"\t"+dto.getBlood().toUpperCase()+"형");
		}
		System.out.println("=".repeat(50));
	}
	public void searchName() {
		System.out.println("찾을 멤버 이름을 입력하세요.");
		String name = sc.nextLine();
		//MemberDto dto = new MemberDto(, hp, addr, blood);
		boolean f = false;
		for(int i = 0; i < list.size(); i++) {
			MemberDto dto = list.get(i);
			while((dto.getName().equals(name) || dto.getName().startsWith(name))) {
				//if(dto.getName().equals(name) || dto.getName().startsWith(name)) {
				f=true;
				System.out.println("이름 : "+dto.getName());
				System.out.println("주소 : "+dto.getAddr());
				System.out.println("핸드폰 : "+dto.getHp());
				System.out.println("혈액형 : "+dto.getBlood());
				System.out.println("=======================");
				break;

			}
			if(!f) System.out.println(name+"이름을 가진 사람은 명단에 없습니다.");
		}
	}
	public void searchPhone() {
		System.out.println("찾을 멤버 번호를 입력하세요.");
		String hp = sc.nextLine();
		//MemberDto dto = new MemberDto(, hp, addr, blood);
		boolean f = false;
		for(int i = 0; i < list.size(); i++) {
			MemberDto dto = list.get(i);
			while((dto.getHp().equals(hp) || dto.getHp().endsWith(hp))) {
				//if(dto.getName().equals(name) || dto.getName().startsWith(name)) {
				f=true;
				System.out.println("이름 : "+dto.getName());
				System.out.println("주소 : "+dto.getAddr());
				System.out.println("핸드폰 : "+dto.getHp());
				System.out.println("혈액형 : "+dto.getBlood());
				System.out.println("=======================");
				break;
			}
			if(!f) System.out.println(hp+"번호를 가진 사람은 명단에 없습니다.");
		}
	}
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Ex08_MemberList ex = new Ex08_MemberList();
		while(true) {
			int menu = ex.getMenu();
			switch(menu) {
			case 1 :
				ex.addMember();
				break;
			case 2 :
				ex.deleteMember();
				break;
			case 3 :
				ex.writeMember();
				break;
			case 4 :
				ex.searchName();
				break;
			case 5 :
				ex.searchPhone();
				break;
			case 6 :
				ex.memberFileSave();
				System.out.println("멤버 정보를 저장 후 종료합니다");
				System.exit(0);
			default :
				System.out.println("잘못 입력된 번호 입니다");
			}
			System.out.println();
		}
	}

}
